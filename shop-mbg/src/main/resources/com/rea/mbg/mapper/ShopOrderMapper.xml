<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rea.mbg.mapper.ShopOrderMapper">
  <resultMap id="BaseResultMap" type="com.rea.mbg.model.ShopOrder">
    <id column="oid" jdbcType="INTEGER" property="oid" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="pname" jdbcType="VARCHAR" property="pname" />
    <result column="pprice" jdbcType="DECIMAL" property="pprice" />
    <result column="number" jdbcType="INTEGER" property="number" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    oid, uid, username, pid, pname, pprice, number
  </sql>
  <select id="selectByExample" parameterType="com.rea.mbg.model.ShopOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shop_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shop_order
    where oid = #{oid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shop_order
    where oid = #{oid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.rea.mbg.model.ShopOrderExample">
    delete from shop_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rea.mbg.model.ShopOrder">
    insert into shop_order (oid, uid, username, 
      pid, pname, pprice, 
      number)
    values (#{oid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, 
      #{pid,jdbcType=INTEGER}, #{pname,jdbcType=VARCHAR}, #{pprice,jdbcType=DECIMAL}, 
      #{number,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.rea.mbg.model.ShopOrder">
    insert into shop_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        oid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="pname != null">
        pname,
      </if>
      <if test="pprice != null">
        pprice,
      </if>
      <if test="number != null">
        number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        #{oid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="pname != null">
        #{pname,jdbcType=VARCHAR},
      </if>
      <if test="pprice != null">
        #{pprice,jdbcType=DECIMAL},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.rea.mbg.model.ShopOrderExample" resultType="java.lang.Long">
    select count(*) from shop_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shop_order
    <set>
      <if test="record.oid != null">
        oid = #{record.oid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.pname != null">
        pname = #{record.pname,jdbcType=VARCHAR},
      </if>
      <if test="record.pprice != null">
        pprice = #{record.pprice,jdbcType=DECIMAL},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shop_order
    set oid = #{record.oid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      pid = #{record.pid,jdbcType=INTEGER},
      pname = #{record.pname,jdbcType=VARCHAR},
      pprice = #{record.pprice,jdbcType=DECIMAL},
      number = #{record.number,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rea.mbg.model.ShopOrder">
    update shop_order
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="pname != null">
        pname = #{pname,jdbcType=VARCHAR},
      </if>
      <if test="pprice != null">
        pprice = #{pprice,jdbcType=DECIMAL},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
    </set>
    where oid = #{oid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rea.mbg.model.ShopOrder">
    update shop_order
    set uid = #{uid,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER},
      pname = #{pname,jdbcType=VARCHAR},
      pprice = #{pprice,jdbcType=DECIMAL},
      number = #{number,jdbcType=INTEGER}
    where oid = #{oid,jdbcType=INTEGER}
  </update>
</mapper>